language: c++

branches:
  except:
    - automatic

cache:
  directories:
    - download

matrix:
  include:
    - os: linux
      dist: bionic
      env:
        - _BUILD=win32
        - _MINGW=mingw32
        - _HOST=i686-w64-mingw32
      before_install:
        - docker pull jpcima/arch-mingw
      install:
        - container=$(docker run -d -i -t -v /home:/home jpcima/arch-mingw /bin/bash)
        - |
          cross() {
            docker exec -w "$(pwd)" -e "_BUILD=$_BUILD" -e "_MINGW=$_MINGW" -e "_HOST=$_HOST" -i -t "$container" "$@"
          }
      script:
        - cross bash .travis/script-mingw.sh
        - cp -drfv bin VL1-"$_BUILD"
        - rm -f VL1-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/VL1-"$_BUILD".zip VL1-"$_BUILD"
    - os: linux
      dist: bionic
      env:
        - _BUILD=win64
        - _MINGW=mingw64
        - _HOST=x86_64-w64-mingw32
      before_install:
        - docker pull jpcima/arch-mingw
      install:
        - container=$(docker run -d -i -t -v /home:/home jpcima/arch-mingw /bin/bash)
        - |
          cross() {
            docker exec -w "$(pwd)" -e "_BUILD=$_BUILD" -e "_MINGW=$_MINGW" -e "_HOST=$_HOST" -i -t "$container" "$@"
          }
      script:
        - cross bash .travis/script-mingw.sh
        - cp -drfv bin VL1-"$_BUILD"
        - rm -f VL1-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/VL1-"$_BUILD".zip VL1-"$_BUILD"
    - os: osx
      osx_image: xcode9.2
      env:
        - _BUILD=macos
      script:
        - bash .travis/script-macos.sh
        - cp -av bin VL1-"$_BUILD"
        - rm -f VL1-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/VL1-"$_BUILD".zip VL1-"$_BUILD"
    - os: linux
      dist: trusty
      env:
        - _BITS=64
        - _BUILD=linux64
      before_install:
        - sudo apt-get update -qq
      install:
        - sudo apt-get install checkinstall libcairo2-dev python
      script:
        - bash .travis/script-linux.sh
        - cp -drfv bin VL1-"$_BUILD"
        - rm -f VL1-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/VL1-"$_BUILD".zip VL1-"$_BUILD"
        - echo "An emulator of Casio VL-Tone VL1" > description-pak
        - sudo checkinstall --type=debian --install=no --default --pkgname=VL1 --pkgversion="`git describe --abbrev=0 | sed 's/^v//'``git log -n 1 --pretty=format:"+%cd~git%h" --date=short master | sed 's/-//g'`" --pkgarch=amd64 --pkgrelease=0jpc1 --pkglicense=BSL-1.0 --pkggroup=sound --maintainer="jp-dev@inbox.ru" --nodoc
        - sudo mv -f *.deb release/VL1-"$_BUILD".deb

before_script:
  - sed -i~ 's%/usr/local%/usr%g' plugins/*/Makefile

before_deploy:
  - |
    if test "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false"; then
      export TRAVIS_TAG=automatic
      git tag -f "$TRAVIS_TAG"
    fi

deploy:
  provider: releases
  api_key: "$GITHUB_TOKEN"
  file: release/*
  file_glob: true
  prerelease: true
  overwrite: true
  on:
    branch: master

env:
  global:
    secure: "0QJkHPls0C1hwI/2tnmFlF33zA8fQia1qLCmIdGDh6GNx0CFX54o2E41Ne9U3rAHd3PAjmObWV3S9IRHLOdcNHUfx1T1a1VhIjiZHOTg3VhCD7n8YW5U9C2Fqq5MuseI3+clRBt33ndCvfp8kKH0KcFSD4ZtcjSc+2h7ln2hop70DBqTO8Dzn7ESlXnoHUQ+IdRWOvJsx2Cmjyhs7smO+zI5jDEt10MYx2tPi3WJGCGx/DO2FUUPHhxz9Pjiv83HMBReNoDfX4Mf5+a92I9B+P7TXyTIpXw8gZxh9v4LdzTvCTYGSvkOmaW5aXIPdebOrs00mKfVcb4Ybil7fRRYRMY5KU3mbOAt8k7Pifww3aiHBpJthLdoId9ENxBoGfINuRg5KMZKLkIz3yj0jpXm4I4qFeD8/vKVNY662DJxDGYBTOYAqnkse4XPlWyWGtULwPXjCn90sYRFnVa7YX28InUgdpeC//7b1Ruw7Qm0+bdo9WBg9WzTlgLYggn70MV5XHUxh2lupP01USMdExesYnsy9JK4LumtYRE2DwYz8wqX5uKy3jh2B2/IhSCBB6c6ZG5eF40MWl9dqy00zRXbICZWpmn78Nt43o4XyjlyXb5WVxz/+1NI70kPQPwUNLrpPfKXsuXV5e9Hp86X/3hD4EPjyj1UruJqvZ43rmHaQjs="

notifications:
  irc: "ircs://chat.freenode.net:7070/#librazik"
